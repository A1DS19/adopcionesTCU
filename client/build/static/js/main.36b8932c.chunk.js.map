{"version":3,"sources":["actions/types.ts","reducers/users.ts","reducers/loading.ts","reducers/pets.ts","reducers/auth.ts","reducers/index.ts","reducers/modals.ts","scripts/autoScrollTop.ts","actions/loading/loading.ts","config/axios.ts","actions/modals.ts","actions/auth.ts","components/nav/AdminMenu.tsx","components/nav/SignedInMenu.tsx","components/nav/SignedOutMenu.tsx","components/nav/Navbar.tsx","components/common/TextInput.tsx","components/common/validationSchemas.ts","components/common/modals/ModalWrapper.tsx","components/common/ErrorLabel.tsx","components/auth/LoginForm.tsx","components/auth/RegisterForm.tsx","components/common/modals/ModalManager.tsx","actions/pets/pets.ts","components/adopciones/adopcionesDashboard/AdopcionFilter.tsx","components/adopciones/adopcionesDashboard/AdopcionlistItem.tsx","components/adopciones/adopcionesDashboard/AdopcionLoader.tsx","components/adopciones/adopcionesDashboard/AdopcionList.tsx","components/adopciones/adopcionesDashboard/AdopcionDashboard.tsx","components/adopciones/adopcionesDetail/AdopcionDetailInfo.tsx","components/adopciones/adopcionesDetail/AdopcionDetailSidebar.tsx","components/common/TextArea.tsx","components/adopciones/adopcionesDetail/ContactForm.tsx","components/adopciones/adopcionesDetail/AdopcionDetailMessage.tsx","components/adopciones/adopcionesDetail/AdopcionDetailContact.tsx","components/adopciones/adopcionesDetail/AdopcionDetailListItem.tsx","components/adopciones/adopcionesDetail/AdopcionDetailPetBreedList.tsx","components/common/Loader.tsx","components/common/Error.tsx","components/adopciones/adopcionesDetail/AdopcionDetail.tsx","components/common/photos/PhotoDropzone.tsx","components/profile/CambiarFoto.tsx","components/profile/MisDatosTab.tsx","components/profile/AjustesCuenta.tsx","components/profile/ProfileContent.tsx","components/profile/ProfilePage.tsx","components/Footer.tsx","components/admin/pets/PetsTableBody.tsx","components/admin/pets/PetList.tsx","components/common/SelectInput.tsx","components/common/photos/PhotosDropzone.tsx","components/admin/pets/PetPhotos.tsx","components/admin/pets/PetForm.tsx","components/admin/users/UserTableBody.tsx","actions/users/users.ts","components/admin/users/UserList.tsx","components/admin/users/UserForm.tsx","components/NotFound404.tsx","components/AuthRoute.tsx","components/AdminRoute.tsx","components/App.tsx","index.tsx"],"names":["types","initialState","usersData","selectedUser","undefined","loading","error","initialized","petsData","selectedPet","page","totalPages","authenticated","currentUser","userId","reducers","combineReducers","modals","state","action","type","OPEN_MODAL","payload","CLOSE_MODAL","auth","SIGNED_IN","FETCH_CURRENT_USER","UPDATE_CURRENT_USER","SIGNED_OUT","users","FETCH_USERS_DATA","FETCH_SELECTED_USER","CREATE_USER","UPDATE_USER","filter","user","_id","id","DELETE_USER","CLEAR_SELECTED_USER","pets","UPDATE_PAGE_NUMBER","FETCH_PETS_DATA","FETCH_SELECTED_PET","CREATE_PET","UPDATE_PET","pet","DELETE_PET","CLEAR_SELECTED_PET","ASYNC_ACTION_START","ASYNC_ACTION_ERROR","ASYNC_ACTION_FINISH","APP_LOADED","CLEAR_ERROR","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","asyncActionStart","asyncActionFinish","api","axios","create","baseURL","headers","Authorization","localStorage","getItem","openModal","closeModal","signInUser","dispatch","a","post","data","setItem","token","toast","response","msg","registerUser","fetchCurrentUser","get","signOutUser","removeItem","AdminMenu","Menu","Item","Image","avatar","spaced","src","Dropdown","pointing","text","as","Link","to","icon","SignedInMenu","handleSignOut","position","photoURL","displayName","onClick","isAdmin","SignedOutMenu","useDispatch","handleAuth","button","Button","basic","inverted","content","style","marginLeft","Navbar","history","useHistory","useSelector","fixed","Container","header","push","alt","marginRight","NavLink","name","TextInput","props","useField","field","meta","FormField","touched","label","Label","color","loginValidationSchema","Yup","email","required","password","registerValidationSchema","min","createUserValidationSchema","lastName","updateUserValidationSchema","createPetValidationSchema","location","breed","adopted","description","updatePersonalDataValidationSchema","updatePasswordValidationSchema","oldPassword","newPassword","confirmPassword","oneOf","currentUserFormValidationSchema","message","max","userName","petId","noCurrentUserFormValidationSchema","newsLetterValidationSchema","ModalWrapper","children","size","Modal","open","onClose","Header","Content","ErrorLabel","errorMessage","marginBottom","LoginForm","initialValues","validationSchema","onSubmit","values","helpers","setSubmitting","setErrors","authError","className","errors","placeholder","value","onChange","handleChange","onBlur","handleBlur","isSubmitting","disabled","isValid","dirty","fluid","RegisterForm","ModalManager","renderedModal","modalLookup","currentModal","ModalComponent","fetchPets","filtro","filterData","fetchSelectedPet","clearSelectedPet","updatePageNumber","getState","sendEmail","emailData","newEmailData","success","AdopcionFilters","vertical","width","attached","active","AdopcionListItem","Card","JSON","parse","ribbon","photosUrl","length","textAlign","Meta","Icon","Description","AdopcionLoader","Placeholder","Group","itemsPerRow","doubling","stackable","Line","PlaceholderParagraph","AdopcionList","renderPets","map","Message","AdopcionDashboard","petsActions","Grid","Column","Pagination","activePage","onPageChange","event","secondary","AdopcionDetailInfo","Segment","Divider","AdopcionDetailSidebar","spy","smooth","toLocaleUpperCase","animated","hidden","visible","TextArea","ContactForm","console","log","AdopcionDetailMessage","marginTop","centered","margin","AdopcionDetailContact","borderRadius","height","AdopcionDetailListItem","selectedBreedPet","AdopcionDetailPetBreedList","currentBreedPets","renderCurrentBreedPets","slice","LoaderComponent","Dimmer","Loader","ErrorComponent","primary","AdopcionDetail","match","params","toString","columns","relaxed","Row","autoPlay","infiniteLoop","showStatus","showThumbs","photo","index","PhotoDropzone","setFiles","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","border","cursor","PhotoUpload","useState","files","setLoading","ifPreview","divided","sub","image","cb","formData","FormData","append","updateUserPFP","go","MisDatosTab","Tab","Pane","enableReinitialize","put","AjustesCuenta","openConfirm","setConfirm","maxWidth","Confirm","cancelButton","confirmButton","onCancel","onConfirm","delete","ProfileContent","panes","menuItem","render","menu","ProfilePage","Footer","display","justifyContent","PetsTableBody","petToDelete","setPetToDelete","handleDelete","deletePet","Table","Cell","substring","link","PetList","setFilter","Input","e","target","celled","HeaderCell","Body","toLowerCase","buscarMascota","SelectInput","Select","clearable","d","setValue","setTouched","options","PhotosDropzone","handleSubmit","onChangeStatus","status","remove","maxFiles","inputContent","inputWithFilesContent","styles","submitButton","backgroundColor","inputLabel","inputLabelWithFiles","PetPhotos","allFiles","images","f","i","addPetsPictures","forEach","err","PetForm","updatePet","goBack","clearing","key","UsersTableBody","userToDelete","setUserToDelete","format","Date","createdAt","UserList","UserForm","fetchSelectedUser","updateUserData","NotFound404","text-align","AuthRoute","Component","rest","prevLocation","AdminRoute","exact","App","autoClose","closeOnClick","pauseOnHover","path","component","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.36b8932c.chunk.js","sourcesContent":["import * as modals from './modals';\nimport * as auth from './auth';\nimport * as pets from './pets/petsInterfaces';\nimport * as users from './users/userInterfaces';\nimport * as loading from './loading/loadingInterfaces';\n\nexport enum types {\n  //Modals\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  //Auth\n  SIGNED_IN,\n  SIGNED_OUT,\n  FETCH_CURRENT_USER,\n  UPDATE_CURRENT_USER,\n  //Pets\n  FETCH_PETS_DATA,\n  FETCH_SELECTED_PET,\n  CLEAR_SELECTED_PET,\n  CREATE_PET,\n  DELETE_PET,\n  UPDATE_PET,\n  UPDATE_PAGE_NUMBER,\n  //loading\n  ASYNC_ACTION_START,\n  ASYNC_ACTION_FINISH,\n  ASYNC_ACTION_ERROR,\n  CLEAR_ERROR,\n  APP_LOADED,\n  //users\n  FETCH_USERS_DATA,\n  FETCH_SELECTED_USER,\n  CLEAR_SELECTED_USER,\n  CREATE_USER,\n  DELETE_USER,\n  UPDATE_USER,\n}\n\nexport type ModalAction = modals.OpenModalAction | modals.CloseModalAction;\n\nexport type AuthAction =\n  | auth.SignInAction\n  | auth.SignOutAction\n  | auth.FetchCurrentUserAction\n  | auth.UpdateCurrentUserAction;\n\nexport type PetsAction =\n  | pets.FetchPets\n  | pets.FetchSelectedPet\n  | pets.ClearSelectedPet\n  | pets.CreatePet\n  | pets.UpdatePet\n  | pets.DeletePet\n  | pets.UpdatePageNumber;\n\nexport type UsersAction =\n  | users.FetchUsers\n  | users.FetchSelectedUser\n  | users.ClearSelectedUser\n  | users.CreateUser\n  | users.UpdateUser\n  | users.DeleteUser;\n\nexport type LoadingAction =\n  | loading.AsyncActionError\n  | loading.AsyncActionStart\n  | loading.AsyncActionFinish\n  | loading.CLearErrorAction\n  | loading.AppLoaded;\n","import { UsersAction } from './../actions/types';\nimport { AuthPayload } from './../actions/auth';\nimport { types } from '../actions/types';\n\nexport interface UsersInitialStateProps {\n  usersData: AuthPayload[] | [];\n  selectedUser: AuthPayload | undefined;\n}\n\nconst initialState: UsersInitialStateProps = {\n  usersData: [],\n  selectedUser: undefined,\n};\n\nexport const usersReducer = (\n  state: UsersInitialStateProps = initialState,\n  action: UsersAction\n) => {\n  switch (action.type) {\n    case types.FETCH_USERS_DATA:\n      return { ...state, usersData: action.payload };\n\n    case types.FETCH_SELECTED_USER:\n      return { ...state, selectedUser: action.payload };\n\n    case types.CREATE_USER:\n      return { ...state, usersData: [...state.usersData, action.payload] };\n\n    case types.UPDATE_USER:\n      return {\n        ...state,\n        usersData: [\n          ...state.usersData.filter(\n            (user: AuthPayload) => user._id !== action.payload.id\n          ),\n          action.payload,\n        ],\n      };\n\n    case types.DELETE_USER:\n      return {\n        ...state,\n        usersData: state.usersData.filter(\n          (user: AuthPayload) => user._id !== action.payload\n        ),\n      };\n\n    case types.CLEAR_SELECTED_USER:\n      return { ...state, selectedUser: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { types, LoadingAction } from '../actions/types';\nimport { LoadingState } from '../actions/loading/loadingInterfaces';\n\nconst initialState: LoadingState = {\n  loading: false,\n  error: null,\n  initialized: false,\n};\n\nexport const loadingReducer = (\n  state: LoadingState = initialState,\n  action: LoadingAction\n) => {\n  switch (action.type) {\n    case types.ASYNC_ACTION_START:\n      return { ...state, loading: true };\n\n    case types.ASYNC_ACTION_ERROR:\n      return { ...state, loading: false, error: action.payload };\n\n    case types.ASYNC_ACTION_FINISH:\n      return { ...state, loading: false };\n\n    case types.APP_LOADED:\n      return { ...state, initialized: true };\n\n    case types.CLEAR_ERROR:\n      return { ...state, error: null };\n\n    default:\n      return state;\n  }\n};\n","import { PetsData } from '../actions/pets/petsInterfaces';\nimport { PetsAction, types } from '../actions/types';\n\nexport interface PetsInitialStateProps {\n  petsData: PetsData[] | [];\n  selectedPet: PetsData | undefined;\n  page: number;\n  totalPages: number;\n}\n\nconst initialState: PetsInitialStateProps = {\n  petsData: [],\n  selectedPet: undefined,\n  page: 0,\n  totalPages: 0,\n};\n\nexport const petsReducer = (\n  state: PetsInitialStateProps = initialState,\n  action: PetsAction\n) => {\n  switch (action.type) {\n    case types.UPDATE_PAGE_NUMBER:\n      return { ...state, page: action.payload };\n\n    case types.FETCH_PETS_DATA:\n      return {\n        ...state,\n        petsData: action.payload.pets,\n        totalPages: action.payload.totalPages,\n      };\n\n    case types.FETCH_SELECTED_PET:\n      return { ...state, selectedPet: action.payload };\n\n    case types.CREATE_PET:\n      return { ...state, petsData: [...state.petsData, action.payload] };\n\n    case types.UPDATE_PET:\n      return {\n        ...state,\n        petsData: [\n          ...state.petsData.filter((pet: PetsData) => pet._id !== action.payload._id),\n          action.payload,\n        ],\n      };\n\n    case types.DELETE_PET:\n      return {\n        ...state,\n        petsData: state.petsData.filter((pet: PetsData) => pet._id !== action.payload),\n      };\n\n    case types.CLEAR_SELECTED_PET:\n      return { ...state, selectedPet: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { AuthAction } from './../actions/types';\nimport { types } from '../actions/types';\nimport { AuthPayload } from '../actions/auth';\n\nexport interface AuthInitialStateProps {\n  authenticated: boolean;\n  currentUser?: AuthPayload | null;\n  userId: string | null;\n}\n\nconst initialState: AuthInitialStateProps = {\n  authenticated: false,\n  currentUser: null,\n  userId: null,\n};\n\nexport const authReducer = (\n  state: AuthInitialStateProps = initialState,\n  action: AuthAction\n) => {\n  switch (action.type) {\n    case types.SIGNED_IN:\n      return {\n        ...state,\n        authenticated: true,\n        currentUser: action.payload,\n      };\n\n    case types.FETCH_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n\n    case types.UPDATE_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n\n    case types.SIGNED_OUT:\n      return {\n        ...state,\n        authenticated: false,\n        currentUser: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { UsersInitialStateProps, usersReducer } from './users';\nimport { loadingReducer } from './loading';\nimport { PetsInitialStateProps, petsReducer } from './pets';\nimport { combineReducers } from 'redux';\nimport { ModalPayload } from '../actions/modals';\nimport { modalsReducer } from './modals';\nimport { authReducer, AuthInitialStateProps } from './auth';\nimport { LoadingState } from '../actions/loading/loadingInterfaces';\n\nexport interface StoreState {\n  modals: ModalPayload | null;\n  auth: AuthInitialStateProps;\n  users: UsersInitialStateProps;\n  pets: PetsInitialStateProps;\n  loading: LoadingState;\n}\n\nexport const reducers = combineReducers<StoreState>({\n  modals: modalsReducer,\n  auth: authReducer,\n  users: usersReducer,\n  pets: petsReducer,\n  loading: loadingReducer,\n});\n","import { ModalPayload } from './../actions/modals';\nimport { types, ModalAction } from '../actions/types';\n\nexport const modalsReducer = (state: ModalPayload | null = null, action: ModalAction) => {\n  switch (action.type) {\n    case types.OPEN_MODAL:\n      return action.payload;\n\n    case types.CLOSE_MODAL:\n      return null;\n\n    default:\n      return state;\n  }\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const ScrollToTop = (): null => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n","import { types } from '../types';\nimport {\n  AsyncActionError,\n  AsyncActionFinish,\n  AsyncActionStart,\n  CLearErrorAction,\n} from './loadingInterfaces';\n\nexport const asyncActionStart = (): AsyncActionStart => {\n  return {\n    type: types.ASYNC_ACTION_START,\n  };\n};\n\nexport const asyncActionFinish = (): AsyncActionFinish => {\n  return {\n    type: types.ASYNC_ACTION_FINISH,\n  };\n};\n\nexport const asyncActionError = (error: string): AsyncActionError => {\n  console.log(error);\n\n  return {\n    type: types.ASYNC_ACTION_ERROR,\n    payload: error,\n  };\n};\n\nexport const clearError = (): CLearErrorAction => {\n  return {\n    type: types.CLEAR_ERROR,\n  };\n};\n","import axios from 'axios';\n\nexport interface ServerResponse<T> {\n  data: T;\n}\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:5000',\n  headers: {\n    Authorization: localStorage.getItem('token'),\n  },\n});\n","import { types } from './types';\n\nexport interface ModalPayload {\n  type: 'LoginForm' | 'RegisterForm';\n  props?: JSX.Element;\n}\n\nexport interface OpenModalAction {\n  type: types.OPEN_MODAL;\n  payload: ModalPayload;\n}\n\nexport interface CloseModalAction {\n  type: types.CLOSE_MODAL;\n}\n\nexport const openModal = (payload: ModalPayload): OpenModalAction => {\n  return {\n    type: types.OPEN_MODAL,\n    payload,\n  };\n};\n\nexport const closeModal = (): CloseModalAction => {\n  return {\n    type: types.CLOSE_MODAL,\n  };\n};\n","import { asyncActionStart, asyncActionFinish, asyncActionError } from './loading/loading';\nimport { Dispatch } from 'redux';\nimport { types } from './types';\nimport { api } from '../config/axios';\nimport { toast } from 'react-toastify';\nimport { closeModal } from './modals';\n\nexport interface AuthPayload {\n  id?: number;\n  _id?: any;\n  email: string;\n  password: string;\n  name?: string;\n  lastName?: string;\n  isAdmin?: string;\n  displayName?: string;\n  createdAt?: Date;\n  photoURL?: string;\n}\n\nexport interface SignInAction {\n  type: types.SIGNED_IN;\n  payload: AuthPayload;\n}\n\nexport interface SignOutAction {\n  type: types.SIGNED_OUT;\n}\n\nexport interface FetchCurrentUserAction {\n  type: types.FETCH_CURRENT_USER;\n  payload: AuthPayload;\n}\n\nexport interface UpdateCurrentUserAction {\n  type: types.UPDATE_CURRENT_USER;\n  payload: AuthPayload;\n}\n\nexport const signInUser = (user: AuthPayload) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post('/auth/login', user);\n      dispatch<SignInAction>({ type: types.SIGNED_IN, payload: data });\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userId', data.id);\n      dispatch(closeModal());\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const registerUser = (user: AuthPayload) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post('/auth/register', user);\n      dispatch<SignInAction>({ type: types.SIGNED_IN, payload: data });\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userId', data.id);\n      dispatch(closeModal());\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const fetchCurrentUser = (userId: string | null) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.get(`/auth/user/${userId}`);\n      dispatch<FetchCurrentUserAction>({ type: types.FETCH_CURRENT_USER, payload: data });\n    } catch (error) {\n      throw error;\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const updateCurrentUser = (\n  userId: number | undefined,\n  user: Partial<AuthPayload>\n) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.put(`/auth/user/${userId}`, user);\n\n      dispatch<UpdateCurrentUserAction>({\n        type: types.UPDATE_CURRENT_USER,\n        payload: data,\n      });\n      toast.success('Datos actualizados');\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const signOutUser = (): SignOutAction => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('userId');\n  return { type: types.SIGNED_OUT };\n};\n\nexport const updateUserPassword = (userId: string | null, password: Object) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.put(`/auth/user-password/${userId}`, password);\n      toast.success(data.msg);\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const deleteUser = (userId: string | null) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.delete(`/auth/user/${userId}`);\n      toast.success(data.msg);\n      signOutUser();\n    } catch (err) {\n      toast.error(err.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const updateUserPFP = (userId: string | null, image: File[], cb: () => void) => {\n  const formData = new FormData();\n  formData.append('image', image[0]);\n\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post(`/auth/user/upload/${userId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      dispatch<UpdateCurrentUserAction>({\n        type: types.UPDATE_CURRENT_USER,\n        payload: data,\n      });\n      cb();\n    } catch (err) {\n      toast.error(err.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Image, Menu } from 'semantic-ui-react';\n\nexport const AdminMenu = () => {\n  return (\n    <Menu.Item>\n      <Image avatar spaced='right' src='/assets/admin.png' />\n      <Dropdown pointing='top left' text='Admin'>\n        <Dropdown.Menu>\n          <Dropdown.Item as={Link} to='/admin/pets' icon='paw' text='Mascotas' />\n          <Dropdown.Item as={Link} to='/admin/users' icon='user' text='Usuarios' />\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu.Item>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Dropdown, Image, Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { AuthPayload } from '../../actions/auth';\nimport { AdminMenu } from './AdminMenu';\n\ninterface Props {\n  handleSignOut: () => void;\n  currentUser: AuthPayload | null;\n}\n\nexport const SignedInMenu: React.FC<Props> = ({\n  currentUser,\n  handleSignOut,\n}): JSX.Element => {\n  return (\n    <Fragment>\n      <Menu.Item position='right'>\n        <Image avatar spaced='right' src={currentUser?.photoURL || '/assets/user.png'} />\n        <Dropdown pointing='top left' text={currentUser?.displayName}>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              as={Link}\n              to={`/profile/${currentUser?.id}`}\n              text='MI PERFIL'\n              icon='user'\n            />\n            <Dropdown.Item text='SALIR' icon='power' onClick={handleSignOut} />\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Item>\n      {currentUser?.isAdmin === 'true' && <AdminMenu />}\n    </Fragment>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Menu } from 'semantic-ui-react';\nimport { openModal } from '../../actions/modals';\n\nexport const SignedOutMenu = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const handleAuth = (button: 'login' | 'register') => {\n    if (button === 'login') {\n      dispatch(openModal({ type: 'LoginForm' }));\n    } else {\n      dispatch(openModal({ type: 'RegisterForm' }));\n    }\n  };\n\n  return (\n    <Fragment>\n      <Menu.Item position='right'>\n        <Button basic inverted content='LOGIN' onClick={() => handleAuth('login')} />\n        <Button\n          style={{ marginLeft: '0.5em' }}\n          basic\n          inverted\n          content='REGISTRO'\n          onClick={() => handleAuth('register')}\n        />\n      </Menu.Item>\n    </Fragment>\n  );\n};\n","import React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Container, Icon, Menu } from 'semantic-ui-react';\nimport { fetchCurrentUser, signOutUser } from '../../actions/auth';\nimport { StoreState } from '../../reducers';\nimport { SignedInMenu } from './SignedInMenu';\nimport { SignedOutMenu } from './SignedOutMenu';\n\nexport const Navbar = (): JSX.Element => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { authenticated, currentUser, userId } = useSelector(\n    (state: StoreState) => state.auth\n  );\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser(userId));\n  }, [dispatch, userId]);\n\n  const handleLogOut = () => {\n    dispatch(signOutUser());\n    history.push('/');\n  };\n\n  return (\n    <div id='nav'>\n      <Menu inverted fixed='top'>\n        <Container>\n          <Menu.Item header onClick={() => history.push('/')}>\n            <img src='/assets/pet-house.png' alt='logo' style={{ marginRight: '15px' }} />\n            ADOPTME.CR\n          </Menu.Item>\n\n          <Menu.Item as={NavLink} to='/adoptions' name='MASCOTAS' />\n\n          {authenticated ? (\n            <Fragment>\n              {/* <Menu.Item as={NavLink} to='/favorites'>\n                <Icon name='heart' size='large' />\n              </Menu.Item> */}\n              <SignedInMenu currentUser={currentUser!} handleSignOut={handleLogOut} />\n            </Fragment>\n          ) : (\n            <SignedOutMenu />\n          )}\n        </Container>\n      </Menu>\n    </div>\n  );\n};\n","import React, { EventHandler } from 'react';\nimport { FieldInputProps, useField } from 'formik';\nimport { FormField, Label } from 'semantic-ui-react';\n\nexport interface TextInputProps extends FieldInputProps<any> {\n  label?: string;\n  placeholder?: string;\n  value: any;\n  type?: 'text' | 'password';\n  onChange: EventHandler<any>;\n  onBlur: EventHandler<any>;\n}\n\nexport const TextInput = (props: TextInputProps): JSX.Element => {\n  const [field, meta] = useField(props);\n\n  return (\n    // '!!' para convertir meta.error en un boolean\n    <FormField error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} type={props.type} />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </FormField>\n  );\n};\n","import * as Yup from 'yup';\nimport 'yup-phone';\n\nexport const loginValidationSchema = Yup.object({\n  email: Yup.string().required('El email es requerido').email(),\n  password: Yup.string().required('La contrasena es requerida'),\n});\n\nexport const registerValidationSchema = Yup.object({\n  email: Yup.string().required('El email es requerido').email(),\n  displayName: Yup.string().required('El nombre de usuario es requerida'),\n  password: Yup.string()\n    .required('La contrasena es requerida')\n    .min(6, 'La contrasena debe tener minimo 6 digitos'),\n});\n\nexport const createUserValidationSchema = Yup.object({\n  email: Yup.string().required('El email es requerido').email(),\n  displayName: Yup.string().required('El nombre de usuario es requerida'),\n  password: Yup.string()\n    .required('La contrasena es requerida')\n    .min(6, 'La contrasena debe tener minimo 6 digitos'),\n  name: Yup.string().required('El nombre es requerido'),\n  lastName: Yup.string().required('El apellido es requerido'),\n  isAdmin: Yup.string().required(\n    'Determinar si el usuario es administrador es requerido'\n  ),\n});\n\nexport const updateUserValidationSchema = Yup.object({\n  email: Yup.string().required('El email es requerido').email(),\n  displayName: Yup.string().required('El nombre de usuario es requerida'),\n  name: Yup.string().required('El nombre es requerido'),\n  lastName: Yup.string().required('El apellido es requerido'),\n  isAdmin: Yup.string().required(\n    'Determinar si el usuario es administrador es requerido'\n  ),\n});\n\nexport const createPetValidationSchema = Yup.object({\n  name: Yup.string().required('El nombre es requerido'),\n  location: Yup.string().required('La ubicacion es requerida'),\n  breed: Yup.string().required('La raza es requerida'),\n  adopted: Yup.string().required('Debe escojer si la mascota esta adoptada o no'),\n  description: Yup.string().required('La descripccion es requerida'),\n});\n\nexport const updatePersonalDataValidationSchema = Yup.object({\n  displayName: Yup.string().required('El nombre de usuario es requerida'),\n  name: Yup.string().required('El apellido es requerido'),\n  lastName: Yup.string().required('El apellido es requerido'),\n});\n\nexport const updatePasswordValidationSchema = Yup.object({\n  oldPassword: Yup.string().required('Debe agregar su antigua contrasena para cambiarla'),\n  newPassword: Yup.string()\n    .required('La contrasena es requerida')\n    .min(6, 'La contrasena debe tener minimo 6 digitos'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('newPassword'), null], 'Las contrasenas deben ser iguales')\n    .required(),\n});\n\nexport const currentUserFormValidationSchema = Yup.object({\n  email: Yup.string().required('El email es requerido').email(),\n  message: Yup.string().max(5000).required('El mensaje es requerido'),\n  userName: Yup.string().required('Debe agregar su nombre'),\n  petId: Yup.string(),\n});\n\nexport const noCurrentUserFormValidationSchema = Yup.object({\n  email: Yup.string().required('El email es requerido').email(),\n  message: Yup.string().max(5000).required('El mensaje es requerido'),\n  userName: Yup.string().required('Debe agregar su nombre'),\n  petId: Yup.string(),\n});\n\nexport const newsLetterValidationSchema = Yup.object({\n  email: Yup.string().required('Debe agregar un email').email(),\n});\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'semantic-ui-react';\nimport { closeModal } from '../../../actions/modals';\n\ninterface Props {\n  size: 'mini' | 'tiny' | 'small' | 'large' | 'fullscreen';\n  header: string;\n}\n\nconst ModalWrapper: React.FC<Props> = ({ children, header, size }) => {\n  const dispatch = useDispatch();\n  return (\n    <Modal open={true} onClose={() => dispatch(closeModal())} header={header} size={size}>\n      {header && <Modal.Header>{header}</Modal.Header>}\n\n      <Modal.Content>{children}</Modal.Content>\n    </Modal>\n  );\n};\n\nexport { ModalWrapper };\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\nexport const ErrorLabel: React.FC<{ errorMessage: string }> = ({ errorMessage }) => {\n  return <Label basic style={{ marginBottom: 10 }} color='red' content={errorMessage} />;\n};\n","import React from 'react';\nimport { Formik, FormikHelpers, FormikProps, Form } from 'formik';\nimport { Button } from 'semantic-ui-react';\nimport { TextInput } from '../common/TextInput';\nimport { loginValidationSchema } from '../common/validationSchemas';\nimport { ModalWrapper } from '../common/modals/ModalWrapper';\nimport { useDispatch } from 'react-redux';\nimport { ErrorLabel } from '../common/ErrorLabel';\nimport { signInUser } from '../../actions/auth';\n\nexport interface LoginFormValues {\n  email: string;\n  password: string;\n  authError?: string;\n}\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: LoginFormValues = {\n    email: '',\n    password: '',\n  };\n\n  return (\n    <ModalWrapper header='INICIAR SESION' size='mini'>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginValidationSchema}\n        onSubmit={async (\n          values: LoginFormValues,\n          helpers: FormikHelpers<LoginFormValues>\n        ) => {\n          try {\n            helpers.setSubmitting(true);\n            dispatch(signInUser(values));\n          } catch (error) {\n            helpers.setErrors({ authError: error.response.data.msg });\n          } finally {\n            helpers.setSubmitting(false);\n          }\n        }}\n      >\n        {(props: FormikProps<LoginFormValues>) => (\n          <Form className='ui form'>\n            {props.errors.authError && (\n              <ErrorLabel errorMessage={props.errors.authError} />\n            )}\n            <TextInput\n              name='email'\n              placeholder='EMAIL'\n              value={props.values.email}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n\n            <TextInput\n              type='password'\n              name='password'\n              placeholder='CONTRASENA'\n              value={props.values.password}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n\n            <Button\n              loading={props.isSubmitting}\n              disabled={!props.isValid || !props.dirty || props.isSubmitting}\n              type='submit'\n              fluid\n              size='large'\n              color='teal'\n              content='LOGIN'\n            />\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n};\n\nexport { LoginForm };\n","import React from 'react';\nimport { Formik, FormikHelpers, FormikProps, Form } from 'formik';\nimport { Button, Divider, Label } from 'semantic-ui-react';\nimport { TextInput } from '../common/TextInput';\nimport { registerValidationSchema } from '../common/validationSchemas';\nimport { ModalWrapper } from '../common/modals/ModalWrapper';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../actions/modals';\nimport { SocialLogin } from './SocialLogin';\nimport { registerUser } from '../../actions/auth';\nimport { ErrorLabel } from '../common/ErrorLabel';\n\nexport interface RegisterFormValues {\n  email: string;\n  password: string;\n  displayName: string;\n  authError?: string;\n}\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const initialValues: RegisterFormValues = {\n    email: '',\n    displayName: '',\n    password: '',\n  };\n\n  return (\n    <ModalWrapper header='REGISTRO' size='mini'>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registerValidationSchema}\n        onSubmit={async (\n          values: RegisterFormValues,\n          helpers: FormikHelpers<RegisterFormValues>\n        ) => {\n          try {\n            helpers.setSubmitting(true);\n            dispatch(registerUser(values));\n          } catch (error) {\n            helpers.setErrors({ authError: error });\n          } finally {\n            helpers.setSubmitting(false);\n          }\n        }}\n      >\n        {(props: FormikProps<RegisterFormValues>) => (\n          <Form className='ui form'>\n            {props.errors.authError && (\n              <ErrorLabel errorMessage={props.errors.authError} />\n            )}\n            <TextInput\n              name='email'\n              placeholder='EMAIL'\n              value={props.values.email}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n            <TextInput\n              name='displayName'\n              placeholder='NOMBRE USUARIO'\n              value={props.values.displayName}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n\n            <TextInput\n              type='password'\n              name='password'\n              placeholder='CONTRASENA'\n              value={props.values.password}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n\n            <Button\n              loading={props.isSubmitting}\n              disabled={!props.isValid || !props.dirty || props.isSubmitting}\n              type='submit'\n              fluid\n              size='large'\n              color='teal'\n              content='REGISTRO'\n            />\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n};\n\nexport { RegisterForm };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from '../../../reducers';\nimport { LoginForm } from '../../auth/LoginForm';\nimport { RegisterForm } from '../../auth/RegisterForm';\n\nconst ModalManager = (): JSX.Element | null => {\n  const modalLookup = { LoginForm, RegisterForm };\n  const currentModal = useSelector((state: StoreState) => state.modals);\n\n  let renderedModal;\n  if (currentModal) {\n    const { type, props } = currentModal;\n    const ModalComponent = modalLookup[type];\n    renderedModal = <ModalComponent {...props} />;\n  }\n\n  return <span>{renderedModal}</span>;\n};\n\nexport { ModalManager };\n\n// if (LoginForm.name === currentModal.type) {\n//   return <LoginForm {...currentModal.props} />;\n// }\n","import { toast } from 'react-toastify';\nimport {\n  asyncActionStart,\n  asyncActionFinish,\n  asyncActionError,\n} from '../loading/loading';\nimport { Dispatch } from 'redux';\nimport {\n  ClearSelectedPet,\n  CreatePet,\n  UpdatePet,\n  FetchPets,\n  FetchSelectedPet,\n  PetsData,\n  DeletePet,\n  UpdatePageNumber,\n} from './petsInterfaces';\nimport { types } from '../types';\n\n//test api\nimport { api } from '../../config/axios';\nimport { StoreState } from '../../reducers';\n\nexport const fetchPets = (page: number, filtro?: 'disponible' | 'adoptado') => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.get(`/adoptions/pets?page=${page}`);\n\n      let filterData;\n      switch (filtro) {\n        case 'disponible':\n          filterData = [...data.pets.filter((pet: PetsData) => pet.adopted === 'false')];\n          return dispatch<FetchPets>({\n            type: types.FETCH_PETS_DATA,\n            payload: { pets: filterData, totalPages: data.totalPages },\n          });\n\n        case 'adoptado':\n          filterData = [...data.pets.filter((pet: PetsData) => pet.adopted === 'true')];\n          return dispatch<FetchPets>({\n            type: types.FETCH_PETS_DATA,\n            payload: { pets: filterData, totalPages: data.totalPages },\n          });\n\n        default:\n          return dispatch<FetchPets>({\n            type: types.FETCH_PETS_DATA,\n            payload: { pets: data.pets, totalPages: data.totalPages },\n          });\n      }\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const fetchSelectedPet = (pet: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.get(`/adoptions/pet/${pet}`);\n      dispatch<FetchSelectedPet>({ type: types.FETCH_SELECTED_PET, payload: data });\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const createPet = (pet: PetsData, cb: () => void) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post('/adoptions/pet', pet);\n      dispatch<CreatePet>({ type: types.CREATE_PET, payload: data });\n      toast.success(data.msg);\n      cb();\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const updatePet = (petId: string, pet: PetsData, cb: () => void) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.put(`/adoptions/pet/${petId}`, pet);\n      dispatch<UpdatePet>({ type: types.UPDATE_PET, payload: data });\n      toast.success(data.msg);\n      cb();\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const deletePet = (id: string | null) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.delete(`/adoptions/pet/${id}`);\n      dispatch<DeletePet>({ type: types.DELETE_PET, payload: id });\n      toast.success(data.msg);\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const clearSelectedPet = (): ClearSelectedPet => {\n  return {\n    type: types.CLEAR_SELECTED_PET,\n    payload: undefined,\n  };\n};\n\nexport const updatePageNumber = (page: number) => {\n  return (dispatch: Dispatch, getState: () => StoreState) => {\n    //let { page } = getState().pets;\n    dispatch<UpdatePageNumber>({ type: types.UPDATE_PAGE_NUMBER, payload: page });\n  };\n};\n\nexport const addPetsPictures = (petId: string, images: any[], cb: () => void) => {\n  return async (dispatch: Dispatch) => {\n    const formData = new FormData();\n\n    for (let i = 0; i < images.length; i++) {\n      formData.append('images[]', images[i]);\n    }\n\n    // formData.append('images[]', images[0]);\n    // formData.append('images[]', images[1]);\n    // formData.append('images[]', images[2]);\n\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post(`/adoptions/pet/upload/${petId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      dispatch<UpdatePet>({\n        type: types.UPDATE_PET,\n        payload: data,\n      });\n      toast.success(data.msg);\n      cb();\n    } catch (err) {\n      toast.error(err.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const sendEmail = (petId: any, emailData: Object) => {\n  return async (dispatch: Dispatch) => {\n    let newEmailData = {};\n    newEmailData = { ...emailData, petId };\n\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post(`/adoptions/send`, newEmailData);\n      toast.success(data.msg);\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n","import React, { Fragment } from 'react';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../../../reducers';\nimport { fetchPets } from '../../../actions/pets/pets';\n\ninterface Props {\n  loading?: any;\n}\n\nexport const AdopcionFilters = ({ loading }: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const { authenticated } = useSelector((state: StoreState) => state.auth);\n  const { page } = useSelector((state: StoreState) => state.pets);\n\n  return (\n    <Fragment>\n      <Menu fluid vertical size='large' style={{ width: '100%' }}>\n        <Header icon='filter' attached color='orange' content='Filtros' />\n        <Menu.Item\n          disabled={loading}\n          active={false}\n          onClick={() => dispatch(fetchPets(page))}\n          content='Todas las Mascotas'\n        />\n        <Menu.Item\n          disabled={loading}\n          active={false}\n          onClick={() => dispatch(fetchPets(page, 'disponible'))}\n          content='Mascotas Disponibles'\n        />\n        <Menu.Item\n          disabled={loading}\n          active={false}\n          onClick={() => dispatch(fetchPets(page, 'adoptado'))}\n          content='Mascotas Adoptadas'\n        />\n      </Menu>\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\n\ninterface EventListItemProps {\n  pet: PetsData;\n}\n\nexport const AdopcionListItem: React.FC<EventListItemProps> = ({ pet }): JSX.Element => {\n  const dispatch = useDispatch();\n  const handleDelete = (eventId: any) => {\n    try {\n      console.log(eventId);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <Card fluid as={Link} to={`/adoption/${pet._id}`}>\n      <Image\n        fluid\n        label={{\n          color: `${JSON.parse(pet.adopted) ? 'red' : 'green'}`,\n          content: `${JSON.parse(pet.adopted) ? 'Adoptado' : 'Disponible'}`,\n          ribbon: 'right',\n        }}\n        src={pet?.photosUrl?.length! > 0 ? pet.photosUrl![0] : '/assets/pet-house.png'}\n      />\n      <Card.Content textAlign='center'>\n        <Card.Header>\n          {' '}\n          <p style={{ color: 'orange' }}>{pet.name}</p>{' '}\n        </Card.Header>\n        <Card.Meta>\n          <Icon name='point' /> {pet.location}\n        </Card.Meta>\n        <Card.Description>{pet.description}</Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { Placeholder, Card, PlaceholderParagraph } from 'semantic-ui-react';\n\nexport const AdopcionLoader = (): JSX.Element => {\n  return (\n    <Placeholder fluid>\n      <Card.Group itemsPerRow={2} doubling stackable>\n        <Card>\n          <Placeholder>\n            <Placeholder.Image />\n            <Card.Content textAlign='center'>\n              <Card.Header>\n                <Placeholder.Line />\n              </Card.Header>\n              <Card.Meta>\n                <Placeholder.Line />\n              </Card.Meta>\n              <Card.Description>\n                <PlaceholderParagraph>\n                  <Placeholder.Line />\n                  <Placeholder.Line />\n                </PlaceholderParagraph>\n              </Card.Description>\n            </Card.Content>\n          </Placeholder>\n        </Card>\n\n        <Card>\n          <Placeholder>\n            <Placeholder.Image />\n            <Card.Content textAlign='center'>\n              <Card.Header>\n                <Placeholder.Line />\n              </Card.Header>\n              <Card.Meta>\n                <Placeholder.Line />\n              </Card.Meta>\n              <Card.Description>\n                <PlaceholderParagraph>\n                  <Placeholder.Line />\n                  <Placeholder.Line />\n                </PlaceholderParagraph>\n              </Card.Description>\n            </Card.Content>\n          </Placeholder>\n        </Card>\n      </Card.Group>\n    </Placeholder>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { AdopcionListItem } from './AdopcionlistItem';\nimport { AdopcionLoader } from './AdopcionLoader';\nimport { Card, Icon, Loader, Message } from 'semantic-ui-react';\n\ninterface AdopcionListProps {\n  petsData: PetsData[];\n  loading: boolean;\n}\n\nexport const AdopcionList: React.FC<AdopcionListProps> = ({\n  petsData,\n  loading,\n}): JSX.Element => {\n  if (loading) {\n    return (\n      <Fragment>\n        <AdopcionLoader />\n        <AdopcionLoader />\n        <AdopcionLoader />\n      </Fragment>\n    );\n  }\n\n  const renderPets = petsData?.map(\n    (pet: PetsData): JSX.Element => {\n      return <AdopcionListItem key={pet._id} pet={pet} />;\n    }\n  );\n\n  const renderLoader = () => {\n    return (\n      <Message icon>\n        <Icon name='circle notched' loading={loading} />\n        <Message.Content>\n          <Message.Header>Espere un segundo...</Message.Header>\n          Estamos cargando mas contenido\n        </Message.Content>\n      </Message>\n    );\n  };\n\n  const renderEndMessage = () => {\n    return <Message icon='warning' header='Ya no hay mas contenido' />;\n  };\n\n  return (\n    <Fragment>\n      {petsData.length !== 0 ? (\n        <Card.Group itemsPerRow={2} doubling stackable>\n          {renderPets}\n        </Card.Group>\n      ) : (\n        <Message icon='warning' header='Ya no hay mas contenido' />\n      )}\n    </Fragment>\n  );\n};\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Grid, Pagination } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../../../reducers/index';\nimport { AdopcionFilters } from './AdopcionFilter';\nimport { AdopcionList } from './AdopcionList';\nimport { AdopcionLoader } from './AdopcionLoader';\nimport * as petsActions from '../../../actions/pets/pets';\n\nexport const AdopcionDashboard = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { petsData, page, totalPages } = useSelector((state: StoreState) => state.pets);\n  const { loading } = useSelector((state: StoreState) => state.loading);\n\n  useEffect(() => {\n    dispatch(petsActions.fetchPets(page));\n  }, [dispatch, page]);\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        {loading && (\n          <Fragment>\n            <AdopcionLoader />\n            <AdopcionLoader />\n            <AdopcionLoader />\n            <AdopcionLoader />\n          </Fragment>\n        )}\n        <AdopcionList loading={loading} petsData={petsData} />\n      </Grid.Column>\n\n      <Grid.Column width={6}>\n        <AdopcionFilters />\n      </Grid.Column>\n\n      <Pagination\n        activePage={page + 1}\n        totalPages={totalPages}\n        onPageChange={(event, data) => {\n          dispatch(petsActions.updatePageNumber((data.activePage as number) - 1));\n        }}\n        // firstItem={null}\n        // lastItem={null}\n        pointing\n        secondary\n      />\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Divider, Icon, Item, Segment } from 'semantic-ui-react';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n}\n\nexport const AdopcionDetailInfo: React.FC<Props> = ({ selectedPet }) => {\n  return (\n    <Segment>\n      <Item.Group>\n        <Item.Content>\n          <Item.Header as='h1' content={selectedPet?.name} />\n          <Divider />\n          <Item.Meta>\n            <Icon name='paw' /> {selectedPet?.breed}\n            <br />\n            <Icon name='point' />\n            {selectedPet?.location}\n          </Item.Meta>\n          <Divider />\n          <Item.Header as='h3' content='Acerca' />\n          <Item.Header as='h5' content='Caracteristicas' />\n          <Item.Description>{selectedPet?.description}</Item.Description>\n        </Item.Content>\n      </Item.Group>\n    </Segment>\n  );\n};\n","import React from 'react';\nimport { Button, Icon, Segment } from 'semantic-ui-react';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { Link } from 'react-scroll';\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n}\n\nexport const AdopcionDetailSidebar: React.FC<Props> = ({ selectedPet }) => {\n  return (\n    <Segment textAlign='center'>\n      <Button.Group vertical>\n        <Button\n          style={{ marginBottom: '10px' }}\n          as={Link}\n          basic\n          to='contact-form'\n          spy={true}\n          smooth={true}\n          size='medium'\n          color='orange'\n          content={`PREGUNTAR ACERCA DE ${selectedPet?.name.toLocaleUpperCase()}`}\n        />\n        {/* <Button style={{ marginBottom: '10px' }} basic size='medium' color='orange'>\n          <Icon name='heart outline' /> AGREGAR A FAVORITOS\n        </Button> */}\n        <Button basic color='orange' size='medium' animated='vertical'>\n          <Button.Content hidden content={<Icon name='share' />} />\n          <Button.Content visible content='COMPARTIR' />\n        </Button>\n      </Button.Group>\n    </Segment>\n  );\n};\n","import React, { EventHandler } from 'react';\nimport { FieldInputProps, useField } from 'formik';\nimport { FormField, Label } from 'semantic-ui-react';\n\nexport interface TextAreaInputProps extends FieldInputProps<''> {\n  label?: string;\n  placeholder?: string;\n  rows?: number;\n  value: any;\n  onChange: EventHandler<any>;\n  onBlur: EventHandler<any>;\n}\n\n//Arreglar types\nexport const TextArea = (props: TextAreaInputProps): JSX.Element => {\n  const [field, meta] = useField(props);\n\n  return (\n    // '!!' para convertir meta.error en un boolean\n    <FormField error={meta.touched && !!meta.error}>\n      <label>\n        {props.label}\n        <textarea {...field} {...props} />\n      </label>\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </FormField>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Formik, FormikHelpers, FormikProps, Form } from 'formik';\nimport { Button, Label } from 'semantic-ui-react';\nimport { TextInput } from '../../common/TextInput';\nimport { TextArea } from '../../common/TextArea';\nimport {\n  currentUserFormValidationSchema,\n  noCurrentUserFormValidationSchema,\n} from '../../common/validationSchemas';\nimport { useDispatch } from 'react-redux';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { ErrorLabel } from '../../common/ErrorLabel';\nimport { AuthPayload } from '../../../actions/auth';\nimport { sendEmail } from '../../../actions/pets/pets';\n\nexport interface ContactFormProps {\n  message: string;\n  email: string;\n  userName: string;\n  error?: string;\n}\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n  currentUser: AuthPayload | undefined | null;\n}\n\nexport const ContactForm: React.FC<Props> = ({ selectedPet, currentUser }) => {\n  const dispatch = useDispatch();\n  console.log(selectedPet);\n\n  const initialValues: ContactFormProps = {\n    message: '',\n    email: currentUser?.email || '',\n    userName: currentUser ? `${currentUser.name} ${currentUser.lastName}` : '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={\n        currentUser ? currentUserFormValidationSchema : noCurrentUserFormValidationSchema\n      }\n      onSubmit={async (\n        values: ContactFormProps,\n        helpers: FormikHelpers<ContactFormProps>\n      ) => {\n        try {\n          helpers.setSubmitting(true);\n          dispatch(sendEmail(selectedPet?.id, values));\n        } catch (error) {\n          helpers.setErrors({ error: error.message });\n        } finally {\n          helpers.setSubmitting(false);\n        }\n      }}\n    >\n      {(props: FormikProps<ContactFormProps>) => (\n        <Form className='ui form'>\n          {props.errors.error && <ErrorLabel errorMessage={props.errors.error} />}\n          {!currentUser && (\n            <Fragment>\n              <TextInput\n                name='email'\n                placeholder='Email'\n                value={props.values.email}\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n              />\n\n              <TextInput\n                name='userName'\n                placeholder='Su nombre'\n                value={props.values.userName}\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n              />\n            </Fragment>\n          )}\n\n          <TextArea\n            name='message'\n            placeholder={`Me pregunto si ${selectedPet?.name}...`}\n            value={props.values.message}\n            onChange={props.handleChange}\n            onBlur={props.handleBlur}\n          />\n\n          <Button\n            loading={props.isSubmitting}\n            disabled={!props.isValid || !props.dirty || props.isSubmitting}\n            type='submit'\n            fluid\n            size='large'\n            color='orange'\n            content='ENVIAR'\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { StoreState } from '../../../reducers';\nimport { ContactForm } from './ContactForm';\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n}\n\nexport const AdopcionDetailMessage: React.FC<Props> = ({ selectedPet }) => {\n  const { currentUser } = useSelector((state: StoreState) => state.auth);\n\n  return (\n    <Grid style={{ marginTop: '10px' }} centered={currentUser ? false : true}>\n      {currentUser && (\n        <Grid.Column width={7}>\n          <h2 style={{ margin: 0 }}>Departe de:</h2>\n          <h3 style={{ margin: 0 }}>\n            {' '}\n            <Icon name='mail' /> {currentUser?.email}\n          </h3>\n          <p style={{ marginTop: '5px' }}>\n            <Icon name='user' /> {currentUser?.name} {currentUser?.lastName}\n          </p>\n        </Grid.Column>\n      )}\n      <Grid.Column width={9}>\n        <span>SU MENSAJE DEBE TENER (5000 CARACTERES COMO MAXIMO)</span>\n        <ul>\n          <li>Puede agregar preguntas sobre la mascota</li>\n          <li>Comentarios hacia el refugio/rescates</li>\n        </ul>\n        <ContactForm selectedPet={selectedPet} currentUser={currentUser} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Item, Segment } from 'semantic-ui-react';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { AdopcionDetailComments } from './AdopcionDetailComments';\nimport { AdopcionDetailMessage } from './AdopcionDetailMessage';\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n  authenticated: boolean;\n}\n\nexport const AdopcionDetailContact: React.FC<Props> = ({\n  selectedPet,\n  authenticated,\n}) => {\n  return (\n    <Fragment>\n      <Segment>\n        <Item.Group>\n          <Item>\n            {selectedPet?.photosUrl && (\n              <img\n                style={{\n                  borderRadius: '50%',\n                  width: '120px',\n                  height: '120px',\n                  marginRight: '30px',\n                }}\n                src={selectedPet?.photosUrl![0]}\n                alt='petPic'\n              />\n            )}\n            <Item.Content style={{ marginTop: '20px' }}>\n              <Item.Header content={`Pregunta acerca de ${selectedPet?.name}`} />\n              <Item.Description>\n                {selectedPet?.breed}\n                <br />\n                {selectedPet?.description}\n              </Item.Description>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      {/* <AdopcionDetailComments authenticated={authenticated} selectedPet={selectedPet} /> */}\n      <AdopcionDetailMessage selectedPet={selectedPet} />\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\n\ninterface EventListItemProps {\n  selectedBreedPet: PetsData;\n}\n\nexport const AdopcionDetailListItem: React.FC<EventListItemProps> = ({\n  selectedBreedPet,\n}): JSX.Element => {\n  return (\n    <Card as={Link} to={`/adoption/${selectedBreedPet?._id}`}>\n      <Image\n        fluid\n        src={\n          selectedBreedPet.photosUrl?.length! > 0\n            ? selectedBreedPet?.photosUrl![0]\n            : '/assets/pet-house.png'\n        }\n      />\n      <Card.Content textAlign='center'>\n        <Card.Header>\n          {' '}\n          <p style={{ color: 'orange' }}>{selectedBreedPet?.name}</p>{' '}\n        </Card.Header>\n        <Card.Meta>\n          <Icon name='point' /> {selectedBreedPet?.location}\n        </Card.Meta>\n        <Card.Description>{selectedBreedPet?.description}</Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Card, Header, Segment } from 'semantic-ui-react';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { AdopcionDetailListItem } from './AdopcionDetailListItem';\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n  petsData: PetsData[];\n}\n\nexport const AdopcionDetailPetBreedList: React.FC<Props> = ({\n  selectedPet,\n  petsData,\n}): JSX.Element => {\n  //Encuentra los animales cuya raza sea igual a\n  //del animal seleccionado\n  const currentBreedPets = petsData.filter(\n    (pet: PetsData) => pet.breed === selectedPet?.breed && pet._id !== selectedPet.id\n  );\n\n  const renderCurrentBreedPets = currentBreedPets\n    .map((pet: PetsData) => (\n      <AdopcionDetailListItem key={pet._id} selectedBreedPet={pet} />\n    ))\n    .slice(0, 3);\n\n  return (\n    <Fragment>\n      {currentBreedPets.length !== 0 && (\n        <Segment>\n          <Header\n            textAlign='center'\n            as='h1'\n            content={`Mas rescates de raza ${selectedPet?.breed}`}\n          />\n          <Card.Group itemsPerRow={3} doubling stackable>\n            {renderCurrentBreedPets}\n          </Card.Group>\n        </Segment>\n      )}\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nconst LoaderComponent: React.FC<Props> = ({\n  inverted = true,\n  content = 'Cargando...',\n}) => {\n  return (\n    <Dimmer inverted={inverted} active={true} page={true}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n};\n\nexport { LoaderComponent };\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport { clearError } from '../../actions/loading/loading';\nimport { StoreState } from '../../reducers/index';\n\nexport const ErrorComponent = (): JSX.Element => {\n  const { error } = useSelector((state: StoreState) => state.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearError());\n    };\n  });\n\n  return (\n    <Segment placeholder>\n      <Header\n        textAlign='center'\n        content={error || 'Ha ocurrido un error inesperado...'}\n      />\n      <Button\n        as={Link}\n        to='/adoptions'\n        primary\n        style={{ marginTop: 20 }}\n        content='Volver a adopciones'\n      />\n    </Segment>\n  );\n};\n","import React, { Fragment, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Grid } from 'semantic-ui-react';\nimport { usePetData } from '../../../hooks/usePet';\nimport { Carousel } from 'react-responsive-carousel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearSelectedPet, fetchSelectedPet } from '../../../actions/pets/pets';\nimport { StoreState } from '../../../reducers';\nimport { AdopcionDetailInfo } from './AdopcionDetailInfo';\nimport { AdopcionDetailSidebar } from './AdopcionDetailSidebar';\nimport { AdopcionDetailContact } from './AdopcionDetailContact';\nimport { AdopcionDetailPetBreedList } from './AdopcionDetailPetBreedList';\nimport { LoaderComponent } from '../../common/Loader';\nimport { ErrorComponent } from '../../common/Error';\n\nexport interface MatchParams {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const AdopcionDetail = ({ match }: Props) => {\n  const petId = match.params.id;\n  const { petsData, selectedPet } = useSelector((state: StoreState) => state.pets);\n  const { authenticated } = useSelector((state: StoreState) => state.auth);\n  const { loading, error } = useSelector((state: StoreState) => state.loading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchSelectedPet(petId.toString()!));\n    return () => {\n      dispatch(clearSelectedPet());\n    };\n  }, [dispatch, petId]);\n\n  if (error) {\n    return <ErrorComponent />;\n  }\n\n  if (loading || (!petsData && !error)) {\n    return <LoaderComponent />;\n  }\n\n  return (\n    <Fragment>\n      <Grid columns={3} relaxed='very'>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            {selectedPet?.photosUrl && (\n              <Carousel\n                autoPlay\n                // {dynamicHeight}\n                infiniteLoop\n                showStatus={false}\n                showThumbs={false}\n              >\n                {selectedPet?.photosUrl!.map((photo, index) => (\n                  <div style={{ height: '320px' }} key={index}>\n                    <img src={photo} alt='pic' />\n                  </div>\n                ))}\n              </Carousel>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column width={10}>\n            <AdopcionDetailInfo selectedPet={selectedPet} />\n          </Grid.Column>\n          <Grid.Column width={6}>\n            <AdopcionDetailSidebar selectedPet={selectedPet} />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row id='contact-form'>\n          <Grid.Column width={16}>\n            <AdopcionDetailContact\n              authenticated={authenticated}\n              selectedPet={selectedPet}\n            />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <AdopcionDetailPetBreedList petsData={petsData} selectedPet={selectedPet} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { useDropzone } from 'react-dropzone';\n\ndeclare global {\n  interface File {\n    preview: string;\n  }\n}\n\ninterface Props {\n  setFiles: React.Dispatch<React.SetStateAction<never[]>>;\n}\n\nexport const PhotoDropzone: React.FC<Props> = ({ setFiles }) => {\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    onDrop: (acceptedFiles: any) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <section>\n        <div {...getRootProps({ style })}>\n          <input {...getInputProps()} />\n          <p style={{ textAlign: 'center', marginTop: '20px' }}>\n            Arrastre o click aqui para subir foto\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nconst style = { border: 'dashed', height: '100px', cursor: 'pointer' };\n","import React, { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Grid, Header, Image } from 'semantic-ui-react';\nimport { AuthPayload, updateUserPFP } from '../../actions/auth';\nimport { PhotoDropzone } from '../common/photos/PhotoDropzone';\n\ninterface Props {\n  currentUser: AuthPayload | null;\n}\n\nexport const PhotoUpload: React.FC<Props> = ({ currentUser }) => {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const ifPreview = () => {\n    if (!files || !files.length) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const renderPreview = () => {\n    return files.map((file: File) => (\n      <Image key={file.name} style={{ marginTop: '10px' }} src={file.preview} />\n    ));\n  };\n\n  const handlePhotoSubmit = () => {\n    try {\n      setLoading(true);\n      dispatch(\n        updateUserPFP(currentUser?.id?.toString()!, files, () => {\n          history.go(0);\n        })\n      );\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Header textAlign='center' content='Cambiar Foto de Perfil' />\n      <Grid divided style={{ marginTop: '10px' }}>\n        <Grid.Column width={8}>\n          <Header textAlign='center' color='orange' sub content='agregar una foto' />\n          <PhotoDropzone setFiles={setFiles} />\n        </Grid.Column>\n        <Grid.Column width={8}>\n          <Header\n            textAlign='center'\n            sub\n            color='orange'\n            content={!ifPreview() ? 'foto actual' : 'vista previa'}\n          />\n          {ifPreview() ? (\n            renderPreview()\n          ) : (\n            <Image\n              style={{ marginTop: '10px' }}\n              src={currentUser?.photoURL || '/assets/user.png'}\n            />\n          )}\n        </Grid.Column>\n        {ifPreview() && (\n          <Button\n            loading={loading}\n            disabled={loading}\n            style={{ marginTop: '10px' }}\n            onClick={handlePhotoSubmit}\n            fluid\n            color='orange'\n            content='ACTUALIZAR FOTO'\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n","import { Form, Formik, FormikHelpers, FormikProps } from 'formik';\nimport React from 'react';\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\nimport { ErrorLabel } from '../common/ErrorLabel';\nimport { AuthPayload } from '../../actions/auth';\nimport { TextInput } from '../common/TextInput';\nimport { PhotoUpload } from './CambiarFoto';\nimport { updateCurrentUser } from '../../actions/auth';\nimport { updatePersonalDataValidationSchema } from '../common/validationSchemas';\nimport { useDispatch } from 'react-redux';\n\ninterface Props {\n  loading: boolean;\n  currentUser: AuthPayload | null;\n}\n\ninterface FormValues {\n  name?: string;\n  lastName?: string;\n  displayName?: string;\n  error?: string;\n}\n\nexport const MisDatosTab: React.FC<Props> = ({ loading, currentUser }) => {\n  const dispatch = useDispatch();\n\n  const initialValues: FormValues = {\n    name: currentUser?.name || '',\n    lastName: currentUser?.lastName || '',\n    displayName: currentUser?.displayName || '',\n  };\n\n  return (\n    <Tab.Pane loading={loading} attached={false}>\n      <Header content='Actualizar Datos Personales' />\n      <Formik\n        validationSchema={updatePersonalDataValidationSchema}\n        initialValues={initialValues}\n        enableReinitialize={true}\n        onSubmit={(values: FormValues, helpers: FormikHelpers<FormValues>) => {\n          try {\n            helpers.setSubmitting(true);\n            dispatch(updateCurrentUser(currentUser?.id, values));\n          } catch (error) {\n            helpers.setErrors({ error: error.message });\n          } finally {\n            helpers.setSubmitting(false);\n          }\n        }}\n      >\n        {(props: FormikProps<FormValues>) => (\n          <Grid>\n            <Grid.Column width={9}>\n              <Form className='ui form'>\n                {props.errors.error && <ErrorLabel errorMessage={props.errors.error} />}\n\n                <TextInput\n                  name='displayName'\n                  label='Usuario'\n                  placeholder='Usuario'\n                  value={props.values.displayName}\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n                <TextInput\n                  name='name'\n                  label='Nombre'\n                  placeholder='Nombre'\n                  value={props.values.name}\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n                <TextInput\n                  name='lastName'\n                  label='Apellido'\n                  placeholder='Apellido'\n                  value={props.values.lastName}\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n\n                <Button\n                  loading={props.isSubmitting}\n                  disabled={!props.isValid || !props.dirty || props.isSubmitting}\n                  fluid\n                  type='submit'\n                  size='large'\n                  color='orange'\n                  content='ACTUALIZAR DATOS'\n                />\n              </Form>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <PhotoUpload currentUser={currentUser} />\n            </Grid.Column>\n          </Grid>\n        )}\n      </Formik>\n    </Tab.Pane>\n  );\n};\n","import { Form, Formik, FormikHelpers, FormikProps } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Confirm, Header, Tab } from 'semantic-ui-react';\nimport { AuthPayload, deleteUser, updateUserPassword } from '../../actions/auth';\nimport { TextInput } from '../common/TextInput';\nimport { updatePasswordValidationSchema } from '../common/validationSchemas';\n\ninterface Props {\n  loading: boolean;\n  currentUser: AuthPayload | null;\n}\n\ninterface FormValues {\n  newPassword: string;\n  confirmPassword: string;\n  oldPassword: string;\n  error?: string;\n}\n\nexport const AjustesCuenta: React.FC<Props> = ({ loading, currentUser }) => {\n  const [openConfirm, setConfirm] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const initialValues: FormValues = {\n    newPassword: '',\n    confirmPassword: '',\n    oldPassword: '',\n  };\n\n  const handleDeleteAccount = () => {\n    dispatch(deleteUser(currentUser?.id?.toString()!));\n    setConfirm(false);\n  };\n\n  return (\n    <Tab.Pane attached={false}>\n      <Header content='Crear nueva Contrasena' />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={updatePasswordValidationSchema}\n        onSubmit={(values: FormValues, helpers: FormikHelpers<FormValues>) => {\n          try {\n            helpers.setSubmitting(true);\n            dispatch(updateUserPassword(currentUser?.id?.toString()!, values));\n            history.push(`/`);\n          } catch (error) {\n            helpers.setErrors({ error: error.message });\n          } finally {\n            helpers.setSubmitting(false);\n          }\n        }}\n      >\n        {(props: FormikProps<FormValues>) => (\n          <Form className='ui form' style={{ maxWidth: '450px' }}>\n            <TextInput\n              name='oldPassword'\n              label='Antigua Contrasena'\n              placeholder='Antigua Contrasena'\n              type='password'\n              value={props.values.oldPassword}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n            <TextInput\n              name='newPassword'\n              label='Nueva Contrasena'\n              type='password'\n              placeholder='Nueva Contrasena'\n              value={props.values.newPassword}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n            <TextInput\n              name='confirmPassword'\n              type='password'\n              label='Confirmar Nueva Contrasena'\n              placeholder='Confirmar Nueva Contrasena'\n              value={props.values.confirmPassword}\n              onChange={props.handleChange}\n              onBlur={props.handleBlur}\n            />\n            <Button\n              loading={props.isSubmitting}\n              disabled={!props.isValid || !props.dirty || props.isSubmitting}\n              fluid\n              type='submit'\n              size='large'\n              color='orange'\n              content='ACTUALIZAR CONTRASENA'\n            />\n          </Form>\n        )}\n      </Formik>\n\n      <div style={{ maxWidth: '450px', marginTop: '15px' }}>\n        <Header color='red' content='Eliminar Cuenta' />\n        <Button\n          onClick={() => setConfirm(true)}\n          inverted\n          color='red'\n          size='large'\n          content='ELIMINAR CUENTA'\n          fluid\n        />\n      </div>\n\n      <Confirm\n        content='Esta seguro que desea borrar su cuenta?'\n        cancelButton='CANCELAR'\n        confirmButton='BORRAR'\n        open={openConfirm}\n        onCancel={() => setConfirm(false)}\n        onConfirm={handleDeleteAccount}\n      />\n    </Tab.Pane>\n  );\n};\n","import React from 'react';\nimport { Header, Segment, Tab } from 'semantic-ui-react';\nimport { MisDatosTab } from './MisDatosTab';\nimport { AuthPayload } from '../../actions/auth';\nimport { AjustesCuenta } from './AjustesCuenta';\n\ninterface Props {\n  currentUser: AuthPayload | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const ProfileContent: React.FC<Props> = ({ currentUser, loading, error }) => {\n  const panes = [\n    {\n      menuItem: 'Mis Datos',\n      render: () => <MisDatosTab loading={loading} currentUser={currentUser} />,\n    },\n    {\n      menuItem: 'Ajustes de Cuenta',\n      render: () => <AjustesCuenta loading={loading} currentUser={currentUser} />,\n    },\n  ];\n\n  return (\n    <Segment loading={loading}>\n      <Header as='h1' content='Mi Perfil' />\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n    </Segment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { ProfileContent } from './ProfileContent';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StoreState } from '../../reducers';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { AuthPayload, fetchCurrentUser } from '../../actions/auth';\n\nexport interface MatchParams {\n  id: string;\n}\n\nexport interface UserDataProps {\n  user: AuthPayload | null;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const ProfilePage = ({ match }: Props): JSX.Element => {\n  const userId = match.params.id;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser(userId));\n  }, [dispatch, userId]);\n\n  const { loading, error } = useSelector((state: StoreState) => state.loading);\n  const { currentUser } = useSelector((state: StoreState) => state.auth);\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        <ProfileContent loading={loading} error={error} currentUser={currentUser!} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n","import { Form, Formik, FormikHelpers, FormikProps } from 'formik';\nimport React from 'react';\nimport { Button, Grid, Header, Icon, Label, Segment } from 'semantic-ui-react';\nimport { TextInput } from './common/TextInput';\nimport { newsLetterValidationSchema } from './common/validationSchemas';\nimport { Link } from 'react-scroll';\nimport { ErrorLabel } from './common/ErrorLabel';\n\ninterface newsLetterValuesProp {\n  email: string;\n  error?: string;\n}\n\nexport const Footer = () => {\n  const initialValues = {\n    email: '',\n  };\n\n  return (\n    <Segment style={{ marginTop: '50px' }}>\n      <Header as='h2' textAlign='center' content='ADOPTME.CR' />\n      <Grid>\n        <Grid.Column width={10}>\n          <h3>\n            SEGUIR <span>#ADOPTMECR</span>{' '}\n          </h3>\n          <div>\n            <Icon size='large' name='facebook' />\n            <Icon size='large' name='instagram' />\n            <Icon size='large' name='twitter' />\n          </div>\n        </Grid.Column>\n\n        <Grid.Column width={6}>\n          <h3>NEWSLETTER</h3>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={newsLetterValidationSchema}\n            onSubmit={(\n              values: newsLetterValuesProp,\n              helpers: FormikHelpers<newsLetterValuesProp>\n            ) => {\n              try {\n                helpers.setSubmitting(true);\n                console.log(values);\n              } catch (error) {\n                helpers.setErrors({ error: error.message });\n              } finally {\n                helpers.setSubmitting(false);\n              }\n            }}\n          >\n            {(props: FormikProps<newsLetterValuesProp>) => (\n              <Form className='ui form'>\n                {props.errors.error && <ErrorLabel errorMessage={props.errors.error} />}\n                <TextInput\n                  name='email'\n                  placeholder='EMAIL'\n                  value={props.values.email}\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n                <Button\n                  loading={props.isSubmitting}\n                  //disabled={!props.isValid || !props.dirty || props.isSubmitting}\n                  disabled={true}\n                  type='submit'\n                  fluid\n                  size='large'\n                  color='orange'\n                  content='SUBSCRIBIR'\n                />\n              </Form>\n            )}\n          </Formik>\n        </Grid.Column>\n      </Grid>\n      <Link to='nav' spy={true} smooth={true}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            cursor: 'pointer',\n            color: 'black',\n          }}\n        >\n          <h4>VOLVER ARRIBA</h4>\n          <Icon name='arrow up' />\n        </div>\n      </Link>\n    </Segment>\n  );\n};\n","import React, { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Confirm, Icon, Table } from 'semantic-ui-react';\nimport { deletePet } from '../../../actions/pets/pets';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\n\ninterface Props {\n  petsData: PetsData[];\n}\n\nexport const PetsTableBody: React.FC<Props> = ({ petsData }) => {\n  const [openConfirm, setConfirm] = useState(false);\n  const [petToDelete, setPetToDelete] = useState({ id: '', name: '' });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const openDeleteConfirm = (id: string, name: string) => {\n    setPetToDelete({ id, name });\n    setConfirm(true);\n  };\n\n  const handleDelete = (id: string | null) => {\n    dispatch(deletePet(id));\n  };\n\n  return (\n    <Fragment>\n      {petsData.map((pet: PetsData) => (\n        <Fragment>\n          <Table.Row key={pet._id}>\n            <Table.Cell content={pet._id?.slice(0, 5) + '...'} />\n            <Table.Cell content={pet.name} />\n            <Table.Cell content={pet.location} />\n            <Table.Cell content={pet.breed} />\n            <Table.Cell\n              content={\n                JSON.parse(pet.adopted) ? (\n                  <Icon color='green' name='check' />\n                ) : (\n                  <Icon color='red' name='x' />\n                )\n              }\n            />\n            <Table.Cell\n              content={\n                pet?.photosUrl ? (\n                  pet.photosUrl!.length > 0 ? (\n                    <Icon color='green' name='check' />\n                  ) : (\n                    <Icon color='red' name='x' />\n                  )\n                ) : (\n                  <Icon color='red' name='x' />\n                )\n              }\n            />\n            <Table.Cell content={pet.description.substring(0, 20) + '...'} />\n            <Table.Cell>\n              <Icon\n                link\n                onClick={() => history.push(`/admin/pets/${pet._id}`)}\n                size='large'\n                name='edit'\n              />\n              <Icon\n                link\n                onClick={() => openDeleteConfirm(pet._id!, pet.name)}\n                size='large'\n                color='red'\n                name='delete'\n              />\n            </Table.Cell>\n          </Table.Row>\n        </Fragment>\n      ))}\n      <Confirm\n        content={`Esta seguro que desea eliminar a ${petToDelete.name}?`}\n        cancelButton='CANCELAR'\n        confirmButton='ELIMINAR'\n        size='small'\n        open={openConfirm}\n        onCancel={() => setConfirm(false)}\n        onConfirm={() => handleDelete(petToDelete.id)}\n      />\n    </Fragment>\n  );\n};\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Input, Table, Menu, Icon, Pagination } from 'semantic-ui-react';\nimport { fetchPets, updatePageNumber } from '../../../actions/pets/pets';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { StoreState } from '../../../reducers';\nimport { ErrorComponent } from '../../common/Error';\nimport { LoaderComponent } from '../../common/Loader';\nimport { PetsTableBody } from './PetsTableBody';\n\nexport const PetList = () => {\n  const dispatch = useDispatch();\n  const { petsData, page, totalPages } = useSelector((state: StoreState) => state.pets);\n  const { loading, error } = useSelector((state: StoreState) => state.loading);\n  const [filter, setFilter] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchPets(page));\n  }, [dispatch, page]);\n\n  if (error) {\n    return <ErrorComponent />;\n  }\n\n  if (loading || (!petsData && !error)) {\n    return <LoaderComponent />;\n  }\n\n  const buscarMascota = () => {\n    let pet = petsData.filter(\n      (pet: PetsData) => pet.name.toLowerCase() === filter.toLowerCase()\n    );\n\n    if (!pet || pet.length === 0) {\n      return petsData;\n    }\n\n    return pet;\n  };\n\n  return (\n    <Fragment>\n      <Input\n        type='text'\n        placeholder='Buscar Mascota'\n        onChange={(e) => setFilter(e.target.value)}\n      />\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>NOMBRE</Table.HeaderCell>\n            <Table.HeaderCell>UBICACION</Table.HeaderCell>\n            <Table.HeaderCell>RAZA</Table.HeaderCell>\n            <Table.HeaderCell>ADOPTADO</Table.HeaderCell>\n            <Table.HeaderCell>FOTOS</Table.HeaderCell>\n            <Table.HeaderCell>DESCRIPCCION</Table.HeaderCell>\n            <Table.HeaderCell>ACCION</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <PetsTableBody petsData={buscarMascota()} />\n        </Table.Body>\n\n        <Table.Footer>\n          <Pagination\n            activePage={page + 1}\n            totalPages={totalPages}\n            onPageChange={(event, data) => {\n              dispatch(updatePageNumber((data.activePage as number) - 1));\n            }}\n          />\n        </Table.Footer>\n      </Table>\n\n      <Button\n        onClick={() => history.push(`/admin/pets/create`)}\n        color='orange'\n        icon='plus'\n        content='AGREGAR MASCOTA'\n      />\n    </Fragment>\n  );\n};\n","import React, { EventHandler } from 'react';\nimport { FieldInputProps, useField } from 'formik';\nimport { DropdownItemProps, FormField, Label, Select } from 'semantic-ui-react';\n\nexport interface SelectInputProps extends FieldInputProps<''> {\n  label?: string;\n  placeholder?: string;\n  value: any;\n  onChange: EventHandler<any>;\n  onBlur: EventHandler<any>;\n  options: DropdownItemProps[];\n}\n\nexport const SelectInput = (props: SelectInputProps): JSX.Element => {\n  const [field, meta, helpers] = useField(props);\n\n  return (\n    // '!!' para convertir meta.error en un boolean\n    <FormField error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        placeholder={props.placeholder}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        options={props.options}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </FormField>\n  );\n};\n","import React from 'react';\nimport Dropzone, {\n  IFileWithMeta,\n  IStyleCustomization,\n  StatusValue,\n} from 'react-dropzone-uploader';\n\ninterface Props {\n  handleSubmit: (files: IFileWithMeta[], allFiles: IFileWithMeta[]) => void;\n  setFiles: React.Dispatch<React.SetStateAction<never[]>>;\n}\n\nexport const PhotosDropzone: React.FC<Props> = ({ handleSubmit, setFiles }) => {\n  const handleChangeStatus = ({ meta, remove }: any, status: StatusValue) => {\n    setFiles(meta);\n  };\n\n  const styles: IStyleCustomization<React.CSSProperties> = {\n    submitButton: { backgroundColor: 'orange' },\n    inputLabel: { color: 'black' },\n    inputLabelWithFiles: { color: 'black' },\n  };\n\n  return (\n    <Dropzone\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      maxFiles={3}\n      accept='image/*'\n      inputContent='Arrastre o click aqui para subir foto'\n      inputWithFilesContent={(files) => `Puede agregar ${3 - files.length} mas`}\n      styles={styles}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { IFileWithMeta } from 'react-dropzone-uploader';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Grid, Header, Loader } from 'semantic-ui-react';\nimport { addPetsPictures } from '../../../actions/pets/pets';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { PhotosDropzone } from '../../common/photos/PhotosDropzone';\n\ninterface Props {\n  selectedPet: PetsData | undefined;\n}\n\nexport const PetPhotos: React.FC<Props> = ({ selectedPet }) => {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const ifPreview = () => {\n    if (!files || !files.length) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handlePhotosSubmit = (files: IFileWithMeta[], allFiles: IFileWithMeta[]) => {\n    try {\n      setLoading(true);\n      const images = files.map((f: any) => f.file);\n\n      dispatch(\n        addPetsPictures(selectedPet?.id?.toString()!, images, () => {\n          allFiles.forEach((f: any) => f.remove());\n          history.push(`/admin/pets`);\n        })\n      );\n    } catch (err) {\n      toast.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Grid centered>\n      <Grid.Row>\n        {loading ? (\n          <Loader />\n        ) : (\n          <Grid.Column width={16}>\n            <Header\n              as='h3'\n              textAlign='center'\n              content={\n                selectedPet ? `Agregar mas Fotos a ${selectedPet.name}` : 'Agregar Fotos'\n              }\n            />\n            <PhotosDropzone handleSubmit={handlePhotosSubmit} setFiles={setFiles} />\n          </Grid.Column>\n        )}\n      </Grid.Row>\n    </Grid>\n  );\n};\n","import { Form, Formik, FormikHelpers, FormikProps } from 'formik';\nimport React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { Button, Grid, Header, Segment } from 'semantic-ui-react';\nimport {\n  clearSelectedPet,\n  createPet,\n  fetchSelectedPet,\n  updatePet,\n} from '../../../actions/pets/pets';\nimport { PetsData } from '../../../actions/pets/petsInterfaces';\nimport { StoreState } from '../../../reducers';\nimport { ErrorComponent } from '../../common/Error';\nimport { LoaderComponent } from '../../common/Loader';\nimport { SelectInput } from '../../common/SelectInput';\nimport { TextArea } from '../../common/TextArea';\nimport { TextInput } from '../../common/TextInput';\nimport { PetPhotos } from './PetPhotos';\nimport { toast } from 'react-toastify';\nimport { createPetValidationSchema } from '../../common/validationSchemas';\n\nexport interface MatchParams {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const PetForm: React.FC<Props> = ({ match, location }) => {\n  const petId = match.params.id;\n  const { selectedPet } = useSelector((state: StoreState) => state.pets);\n  const { loading, error } = useSelector((state: StoreState) => state.loading);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location.pathname === '/admin/pets/create') return;\n    dispatch(fetchSelectedPet(petId.toString()));\n\n    return () => {\n      dispatch(clearSelectedPet());\n    };\n  }, [dispatch, petId, location.pathname]);\n\n  if (error) {\n    return <ErrorComponent />;\n  }\n\n  if (loading) {\n    return <LoaderComponent />;\n  }\n\n  const initialValues: PetsData = {\n    id: selectedPet?.id!,\n    name: selectedPet?.name!,\n    location: selectedPet?.location!,\n    breed: selectedPet?.breed!,\n    adopted: selectedPet?.adopted!,\n    photosUrl: selectedPet?.photosUrl!,\n    description: selectedPet?.description!,\n  };\n\n  const handleSubmit = (values: PetsData, helpers: FormikHelpers<PetsData>) => {\n    try {\n      selectedPet\n        ? dispatch(\n            updatePet(petId.toString()!, values, () => {\n              history.push('/admin/pets');\n            })\n          )\n        : dispatch(\n            createPet(values, () => {\n              history.push('/admin/pets');\n            })\n          );\n    } catch (error) {\n      toast.error(error);\n    } finally {\n      helpers.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button\n        onClick={() => history.goBack()}\n        color='orange'\n        inverted\n        icon='arrow left'\n        content='Volver'\n      />\n      <Segment clearing>\n        <Header\n          content={\n            selectedPet ? `Modificar Informacion de ${selectedPet.name}` : 'Crear Mascota'\n          }\n        />\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          validationSchema={createPetValidationSchema}\n          onSubmit={(values: PetsData, helpers: FormikHelpers<PetsData>) => {\n            handleSubmit(values, helpers);\n          }}\n        >\n          {(props: FormikProps<PetsData>) => (\n            <Grid>\n              <Grid.Column width={8}>\n                <Form className='ui form'>\n                  <TextInput\n                    label='Nombre'\n                    name='name'\n                    placeholder='Nombre'\n                    value={props.values.name}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <TextInput\n                    label='Ubicacion'\n                    name='location'\n                    placeholder='Ubicacion'\n                    value={props.values.location}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <TextInput\n                    label='Raza'\n                    name='breed'\n                    placeholder='Raza'\n                    value={props.values.breed}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <SelectInput\n                    label='Adoptado'\n                    name='adopted'\n                    placeholder='Esta Adoptado'\n                    value={props.values.adopted}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                    options={[\n                      { key: 0, value: 'true', text: 'Si' },\n                      { key: 1, value: 'false', text: 'No' },\n                    ]}\n                  />\n\n                  <TextArea\n                    label='Descripccion'\n                    name='description'\n                    placeholder='Descripccion'\n                    value={props.values.description}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <Button\n                    loading={props.isSubmitting}\n                    disabled={!props.isValid || !props.dirty || props.isSubmitting}\n                    type='submit'\n                    fluid\n                    size='large'\n                    color='orange'\n                    content={selectedPet ? 'ACTUALIZAR' : 'CREAR'}\n                  />\n                </Form>\n              </Grid.Column>\n              <Grid.Column width={8}>\n                {selectedPet && <PetPhotos selectedPet={selectedPet} />}\n              </Grid.Column>\n            </Grid>\n          )}\n        </Formik>\n      </Segment>\n    </Fragment>\n  );\n};\n","import React, { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Confirm, Icon, Table } from 'semantic-ui-react';\nimport { AuthPayload } from '../../../actions/auth';\nimport { deleteUser } from '../../../actions/users/users';\nimport { format } from 'date-fns';\n\ninterface Props {\n  usersData: AuthPayload[];\n}\n\nexport const UsersTableBody: React.FC<Props> = ({ usersData }) => {\n  const [openConfirm, setConfirm] = useState(false);\n  const [userToDelete, setUserToDelete] = useState({ id: 0, name: '' });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const openDeleteConfirm = (id: number, name: string) => {\n    setUserToDelete({ id, name });\n    setConfirm(true);\n  };\n\n  const handleDelete = (id: number | undefined) => {\n    dispatch(deleteUser(id?.toString()!));\n  };\n\n  return (\n    <Fragment>\n      {usersData.map((user: AuthPayload) => (\n        <Table.Row key={user._id}>\n          <Table.Cell content={user._id.slice(0, 5) + '...'} />\n          <Table.Cell content={user.email} />\n          <Table.Cell content={user.password.slice(0, 7) + '...'} />\n          <Table.Cell content={user.name} />\n          <Table.Cell content={user.lastName} />\n          <Table.Cell\n            content={\n              JSON.parse(user?.isAdmin!) ? (\n                <Icon color='green' name='check' />\n              ) : (\n                <Icon color='red' name='x' />\n              )\n            }\n          />\n          <Table.Cell content={user.displayName?.slice(0, 5) + '...'} />\n          <Table.Cell content={format(new Date(user.createdAt!), 'dd/mm/yyyy')} />\n          <Table.Cell\n            content={\n              user?.photoURL ? (\n                user.photoURL! ? (\n                  <Icon color='green' name='check' />\n                ) : (\n                  <Icon color='red' name='x' />\n                )\n              ) : (\n                <Icon color='red' name='x' />\n              )\n            }\n          />\n          <Table.Cell>\n            <Icon\n              link\n              onClick={() => history.push(`/admin/users/${user._id}`)}\n              size='large'\n              name='edit'\n            />\n            <Icon\n              link\n              onClick={() => openDeleteConfirm(user._id!, user.name! || user.email)}\n              size='large'\n              color='red'\n              name='delete'\n            />\n          </Table.Cell>\n        </Table.Row>\n      ))}\n      <Confirm\n        content={`Esta seguro que desea eliminar a ${userToDelete.name}?`}\n        cancelButton='CANCELAR'\n        confirmButton='ELIMINAR'\n        size='small'\n        open={openConfirm}\n        onCancel={() => setConfirm(false)}\n        onConfirm={() => handleDelete(userToDelete.id)}\n      />\n    </Fragment>\n  );\n};\n","import {\n  CreateUser,\n  FetchUsers,\n  FetchSelectedUser,\n  UpdateUser,\n  DeleteUser,\n  ClearSelectedUser,\n} from './userInterfaces';\nimport { Dispatch } from 'redux';\nimport { api } from '../../config/axios';\nimport { AuthPayload } from '../auth';\nimport { asyncActionFinish, asyncActionStart } from '../loading/loading';\nimport { types } from '../types';\nimport { toast } from 'react-toastify';\n\nexport const createUser = (user: AuthPayload, cb: () => void) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.post('/admin/user', user);\n      dispatch<CreateUser>({ type: types.CREATE_USER, payload: data });\n      toast.success(`Usuario ${data.name} ${data.lastName} creado`);\n      cb();\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const updateUserData = (\n  userId: string | null,\n  user: AuthPayload,\n  cb: () => void\n) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.put(`/admin/user/${userId}`, user);\n      dispatch<UpdateUser>({ type: types.UPDATE_USER, payload: data });\n      toast.success(data.msg);\n      cb();\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const deleteUser = (userId: string | null) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.delete(`/admin/user/${userId}`);\n      dispatch<DeleteUser>({ type: types.DELETE_USER, payload: userId! });\n      toast.success(data.msg);\n    } catch (error) {\n      toast.error(error.response.data.msg);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const fetchSelectedUser = (userId: string | null) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.get(`/admin/user/${userId}`);\n      dispatch<FetchSelectedUser>({ type: types.FETCH_SELECTED_USER, payload: data });\n    } catch (error) {\n      toast.error(error.response);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const fetchUsers = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      const { data } = await api.get('/admin/users');\n      dispatch<FetchUsers>({ type: types.FETCH_USERS_DATA, payload: data });\n    } catch (error) {\n      toast.error(error.response);\n    } finally {\n      dispatch(asyncActionFinish());\n    }\n  };\n};\n\nexport const clearSelectedUser = (): ClearSelectedUser => {\n  return {\n    type: types.CLEAR_SELECTED_USER,\n    payload: undefined,\n  };\n};\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Input, Table } from 'semantic-ui-react';\nimport { AuthPayload } from '../../../actions/auth';\nimport { fetchUsers } from '../../../actions/users/users';\nimport { StoreState } from '../../../reducers';\nimport { ErrorComponent } from '../../common/Error';\nimport { LoaderComponent } from '../../common/Loader';\nimport { UsersTableBody } from './UserTableBody';\n\nexport const UserList = () => {\n  const dispatch = useDispatch();\n  const { usersData } = useSelector((state: StoreState) => state.users);\n  const { loading, error } = useSelector((state: StoreState) => state.loading);\n  const [filter, setFilter] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  if (error) {\n    return <ErrorComponent />;\n  }\n\n  if (loading || (!usersData && !error)) {\n    return <LoaderComponent />;\n  }\n\n  const buscarUsuario = () => {\n    let user = usersData.filter(\n      (user: AuthPayload) => user?.displayName!.toLowerCase() === filter.toLowerCase()\n    );\n\n    if (!user || user.length === 0) {\n      return usersData;\n    }\n\n    return user;\n  };\n\n  return (\n    <Fragment>\n      <Input\n        type='text'\n        placeholder='Buscar Usuario'\n        onChange={(e) => setFilter(e.target.value)}\n      />\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>EMAIL</Table.HeaderCell>\n            <Table.HeaderCell>CONTRASENA</Table.HeaderCell>\n            <Table.HeaderCell>NOMBRE</Table.HeaderCell>\n            <Table.HeaderCell>APELLIDO</Table.HeaderCell>\n            <Table.HeaderCell>ADMIN</Table.HeaderCell>\n            <Table.HeaderCell>USUARIO</Table.HeaderCell>\n            <Table.HeaderCell>CREADO</Table.HeaderCell>\n            <Table.HeaderCell>FOTO</Table.HeaderCell>\n            <Table.HeaderCell>ACCION</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <UsersTableBody usersData={usersData} />\n        </Table.Body>\n      </Table>\n\n      <Button\n        onClick={() => history.push(`/admin/users/create`)}\n        color='orange'\n        icon='plus'\n        content='AGREGAR USUARIO'\n      />\n    </Fragment>\n  );\n};\n","import { Form, Formik, FormikHelpers, FormikProps } from 'formik';\nimport React, { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { Button, Grid, Header, Segment } from 'semantic-ui-react';\nimport { StoreState } from '../../../reducers';\nimport { ErrorComponent } from '../../common/Error';\nimport { LoaderComponent } from '../../common/Loader';\nimport { SelectInput } from '../../common/SelectInput';\nimport { TextInput } from '../../common/TextInput';\nimport { toast } from 'react-toastify';\nimport { AuthPayload } from '../../../actions/auth';\nimport {\n  clearSelectedUser,\n  createUser,\n  fetchSelectedUser,\n  updateUserData,\n} from '../../../actions/users/users';\nimport {\n  createUserValidationSchema,\n  updateUserValidationSchema,\n} from '../../common/validationSchemas';\n\nexport interface MatchParams {\n  id: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const UserForm: React.FC<Props> = ({ match, location }) => {\n  const userId = match.params.id;\n  const { selectedUser } = useSelector((state: StoreState) => state.users);\n  const { loading, error } = useSelector((state: StoreState) => state.loading);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location.pathname === '/admin/users/create') return;\n    dispatch(fetchSelectedUser(userId.toString()));\n\n    return () => {\n      dispatch(clearSelectedUser());\n    };\n  }, [dispatch, userId, location.pathname]);\n\n  if (error) {\n    return <ErrorComponent />;\n  }\n\n  if (loading) {\n    return <LoaderComponent />;\n  }\n\n  const initialValues: AuthPayload = {\n    id: selectedUser?.id!,\n    email: selectedUser?.email!,\n    password: selectedUser?.password!,\n    name: selectedUser?.name!,\n    lastName: selectedUser?.lastName!,\n    isAdmin: selectedUser?.isAdmin!,\n    displayName: selectedUser?.displayName!,\n    photoURL: selectedUser?.photoURL!,\n    createdAt: selectedUser?.createdAt!,\n  };\n\n  const handleSubmit = (values: AuthPayload, helpers: FormikHelpers<AuthPayload>) => {\n    try {\n      if (selectedUser) {\n        dispatch(\n          updateUserData(userId.toString()!, values, () => {\n            history.push('/admin/users');\n          })\n        );\n      } else {\n        dispatch(\n          createUser(values, () => {\n            history.push('/admin/users');\n          })\n        );\n      }\n    } catch (error) {\n      toast.error(error);\n    } finally {\n      helpers.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button\n        onClick={() => history.goBack()}\n        color='orange'\n        inverted\n        icon='arrow left'\n        content='Volver'\n      />\n      <Segment clearing>\n        <Header\n          content={\n            selectedUser\n              ? `Modificar Informacion de ${\n                  selectedUser.name || selectedUser.displayName\n                }`\n              : 'Crear Usuario'\n          }\n        />\n        <Formik\n          enableReinitialize\n          initialValues={initialValues}\n          validationSchema={\n            !selectedUser ? createUserValidationSchema : updateUserValidationSchema\n          }\n          onSubmit={(values: AuthPayload, helpers: FormikHelpers<AuthPayload>) => {\n            handleSubmit(values, helpers);\n          }}\n        >\n          {(props: FormikProps<AuthPayload>) => (\n            <Grid>\n              <Grid.Column width={8}>\n                <Form className='ui form'>\n                  <TextInput\n                    label='Email'\n                    name='email'\n                    placeholder='Email'\n                    value={props.values.email}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  {!selectedUser && (\n                    <TextInput\n                      type='password'\n                      label='Contrasena'\n                      name='password'\n                      placeholder='Contrasena'\n                      value={props.values.password}\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                    />\n                  )}\n\n                  <TextInput\n                    label='Nombre'\n                    name='name'\n                    placeholder='Nombre'\n                    value={props.values.name}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <TextInput\n                    label='Apellido'\n                    name='lastName'\n                    placeholder='Apellido'\n                    value={props.values.lastName}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <SelectInput\n                    label='Administrador'\n                    name='isAdmin'\n                    placeholder='Administrador'\n                    value={props.values.isAdmin}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                    options={[\n                      { key: 0, value: 'true', text: 'Si' },\n                      { key: 1, value: 'false', text: 'No' },\n                    ]}\n                  />\n\n                  <TextInput\n                    label='Nombre de Usuario'\n                    name='displayName'\n                    placeholder='Nombre de Usuario'\n                    value={props.values.displayName}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                  />\n\n                  <Button\n                    loading={props.isSubmitting}\n                    disabled={!props.isValid || !props.dirty || props.isSubmitting}\n                    type='submit'\n                    fluid\n                    size='large'\n                    color='orange'\n                    content={selectedUser ? 'ACTUALIZAR' : 'CREAR'}\n                  />\n                </Form>\n              </Grid.Column>\n            </Grid>\n          )}\n        </Formik>\n      </Segment>\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport function NotFound404() {\n  return (\n    <Grid divided centered text-align='center'>\n      <Grid.Column width={4}>\n        <h1>404</h1>\n        <h3>Pagina no encontrada</h3>\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <Button\n          style={{ marginTop: '17px' }}\n          as={Link}\n          size='large'\n          icon='left arrow'\n          color='orange'\n          content='VOLVER'\n          to='/'\n        />\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, useHistory } from 'react-router-dom';\nimport { StoreState } from '../reducers';\n\ninterface Props {\n  Component?: any;\n  prevLocation?: any;\n  path?: any;\n  rest?: any;\n}\n\nexport const AuthRoute = ({ Component, prevLocation, ...rest }: Props) => {\n  const { authenticated } = useSelector((state: StoreState) => state.auth);\n  const history = useHistory();\n\n  const handleRedirect = () => {\n    history.push('/');\n    return <div></div>;\n  };\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated ? <Component {...props} /> : handleRedirect())}\n    />\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, useHistory } from 'react-router-dom';\nimport { StoreState } from '../reducers';\n\ninterface Props {\n  Component?: any;\n  prevLocation?: any;\n  path?: any;\n  rest?: any;\n  exact?: any;\n}\n\nexport const AdminRoute = ({ Component, prevLocation, exact, ...rest }: Props) => {\n  const { currentUser } = useSelector((state: StoreState) => state.auth);\n  const history = useHistory();\n\n  const handleRedirect = () => {\n    history.push('/');\n    return <div></div>;\n  };\n\n  return (\n    <Route\n      exact\n      {...rest}\n      render={(props) =>\n        currentUser && currentUser.isAdmin ? <Component {...props} /> : handleRedirect()\n      }\n    />\n  );\n};\n","import '../App.css';\nimport React, { Fragment, useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport { Navbar } from '../components/nav/Navbar';\nimport { ModalManager } from '../components/common/modals/ModalManager';\nimport { AdopcionDashboard } from './adopciones/adopcionesDashboard/AdopcionDashboard';\nimport { AdopcionDetail } from './adopciones/adopcionesDetail/AdopcionDetail';\nimport { ProfilePage } from './profile/ProfilePage';\nimport { Footer } from './Footer';\nimport { PetList } from './admin/pets/PetList';\nimport { PetForm } from './admin/pets/PetForm';\nimport { UserList } from './admin/users/UserList';\nimport { UserForm } from './admin/users/UserForm';\nimport { NotFound404 } from './NotFound404';\nimport { AuthRoute } from './AuthRoute';\nimport { AdminRoute } from './AdminRoute';\n\nfunction App() {\n  return (\n    <Fragment>\n      <ModalManager />\n      <ToastContainer\n        position='bottom-right'\n        autoClose={3000}\n        closeOnClick\n        pauseOnHover\n      />\n      <Navbar />\n      <Container className='main'>\n        <Switch>\n          <Route exact path='/'>\n            <Redirect to='/adoptions' />\n          </Route>\n\n          <Route path='/adoptions' component={AdopcionDashboard} />\n          <Route path='/adoption/:id' component={AdopcionDetail} />\n          <AuthRoute path='/profile/:id' Component={ProfilePage} />\n          <AdminRoute exact path='/admin/pets' Component={PetList} />\n          <AdminRoute exact path='/admin/users' Component={UserList} />\n          <AdminRoute\n            path={['/admin/pets/create', '/admin/pets/:id']}\n            Component={PetForm}\n          />\n          <AdminRoute\n            path={['/admin/users/create', '/admin/users/:id']}\n            Component={UserForm}\n          />\n\n          <Route path='*' component={NotFound404} />\n        </Switch>\n      </Container>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import 'semantic-ui-css/semantic.min.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { reducers } from './reducers/index';\nimport { ScrollToTop } from './scripts/autoScrollTop';\nimport App from './components/App';\n\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(\n  reducers,\n  {\n    auth: {\n      authenticated: localStorage.getItem('token') ? true : false,\n      userId: localStorage.getItem('userId'),\n    },\n  },\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}